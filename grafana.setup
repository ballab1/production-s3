#!/bin/bash

#############################################################################
#
#   initialization for grafana
#
#############################################################################

[ "${CONFIG_DIR:-}" ] || CONFIG_DIR="$(pwd)"
[ "${WORKSPACE_DIR:-}" ] || WORKSPACE_DIR="$(pwd)/workspace.$(basename "$CONFIG_DIR")"

declare -r config_dir="${CONFIG_DIR:?}/grafana"
declare -r workspace_dir="${WORKSPACE_DIR:?}/grafana"
declare -r grafana_uid=${GRAFANA_UID:?}


declare isIinitialized="$(basename "${BASH_SOURCE[0]}")"
isIinitialized="${workspace_dir}/.${isIinitialized%.*}.init"
if [ ! -f "$isIinitialized" ]; then

    # perform initialization 
    mkdir -p "$workspace_dir" ||:

    sudo cp -r "${config_dir}" "${WORKSPACE_DIR}/"
    sudo mkdir -p "${workspace_dir}/etc/provisioning/dashboards"
    sudo mkdir -p "${workspace_dir}/etc/provisioning/datasources"
    sudo mkdir -p "${workspace_dir}/etc/provisioning/notifiers"
    sudo mkdir -p "${workspace_dir}/etc/provisioning/plugins"

    declare -r host_ip=$(environ.ipAddress)
    declare -r host_name=$(environ.hostName)
    declare -r grafana_root_password="$(deploy.passwordSecret 'grafana' 'GF_SECURITY_ADMIN_PASSWORD' )"

    declare -r ini=${workspace_dir}/etc/grafana.ini
    sudo sed -i -r -e "s|^instance_name\\s*=.*$|instance_name = ${host_name}|" \
                   -e "s|^domain\\s*=.*$|domain = ${host_ip}|" \
                   -e "s|^root_url\\s*=.*$|root_url = http://${host_ip}:3000/grafana|" \
                   -e "s|admin_user\\s*=.*$|admin_user = ${CFG_USER}|" \
                   -e "s|<HOST_IP>|${host_ip}|g" \
                   -e "s|^admin_password\\s*=.*$|admin_password = ${grafana_root_password}|" \
                "$ini"
    sudo chown -R "$grafana_uid" "$workspace_dir"


    declare dumps_dir="${WORKSPACE_DIR}/mysql/loader/dumps"
    if [ ! -e "${dumps_dir}/grafana.sql" ]; then
        mkdir -p "$dumps_dir" ||:
        cp "${config_dir}/grafana.sql" "${dumps_dir}/grafana.sql"
    fi

    declare -r mysql_root_password="$(deploy.passwordSecret 'mysql' 'MYSQL_ROOT_PASSWORD' )"
    declare -r grafana_dbpass="$(deploy.passwordSecret 'grafana' 'GRAFANA_DBPASS' )"

    # determine grafana dbuser
    declare -r dc_json="$(lib.yamlToJson "${WORKSPACE_DIR}/docker-compose.yml")"
    declare grafana_dbuser=$(jq --compact-output --monochrome-output --raw-output '.services.grafana.environment.GRAFANA_DBUSER' <<< "$dc_json")
    grafana_dbuser="$(eval echo "$grafana_dbuser")"

    if [ "${grafana_dbuser:-null}" != 'null' ] && [ "${grafana_dbpass:-}" ]; then
        cat <<-NCONF_DBUSER > "${WORKSPACE_DIR}/mysql/loader/grafana_user.sh"
#!/bin/bash

cat <<-EOSQL | mysql -uroot -p${mysql_root_password} -hlocalhost
    CREATE DATABASE IF NOT EXISTS grafana;
    CREATE USER IF NOT EXISTS '${grafana_dbuser}'@'%';
    SET PASSWORD FOR '${grafana_dbuser}'@'%' = PASSWORD('${grafana_dbpass}');
    GRANT ALL ON grafana.* TO '${grafana_dbuser}'@'%';
EOSQL

NCONF_DBUSER
    else
        [ "${grafana_dbuser:-}" ] || echo 'grafana_dbuser not defined: connection to MYSQL not created'
        [ "${grafana_dbpass:-}" ] || echo 'grafana_dbpass not defined: connection to MYSQL not created'
    fi
    touch "$isIinitialized"

# perform common
if [ -d "${config_dir}/nginx.conf" ]; then
    sudo mkdir -p "${WORKSPACE_DIR}/nginx/conf.d/"
    sudo cp -ru "${config_dir}/nginx.conf"/* "${WORKSPACE_DIR}/nginx/conf.d/"
    [ -d "${workspace_dir}/nginx.conf" ] && sudo rm -rf "${workspace_dir}/nginx.conf"
fi
exit 0
