#!/bin/bash

#############################################################################
#
#   initialization for zenphoto
#
#############################################################################

declare -r config_dir="${CONFIG_DIR:?}/zen"
declare -r workspace_dir="${WORKSPACE_DIR:?}/zen"


declare isIinitialized="$(basename "${BASH_SOURCE[0]}")"
isIinitialized="${workspace_dir}/.${isIinitialized%.*}.init"
if [ ! -f "$isIinitialized" ]; then

    # perform initialization 
    mkdir -p "$workspace_dir" ||: 
    touch "$isIinitialized"

    echo 'Unpacking photos'
    tar -xzf ~/xsrc/photos.tgz -C "$workspace_dir"

    declare dumps_dir="${WORKSPACE_DIR}/mysql/loader/dumps"
    if [ ! -e "${dumps_dir}/nconf.sql" ]; then
        mkdir -p "$dumps_dir" ||:
        cp "${CONFIG_DIR}/nagios/nconf.sql" "${dumps_dir}/nconf.sql"
    fi

    # update dbms access for zen
    declare -r mysql_root_password="$(deploy.passwordSecret 'mysql' 'MYSQL_ROOT_PASSWORD' )"
    declare -r zen_pass="$(deploy.passwordSecret 'zen' 'ZEN_PASS' )"

    declare dc_json="$(lib.yamlToJson "${WORKSPACE_DIR}/docker-compose.yml")"
    declare zen_user=$(jq '.services.zen.environment.ZEN_USER' <<< "$dc_json" | tr -d '"' )
    zen_user="$(eval echo "$zen_user")"

    cat <<-ZEN_USER > "${WORKSPACE_DIR}/mysql/loader/zen_user.sh"
#!/bin/bash

cat <<-EOSQL | mysql -uroot -p${mysql_root_password} -hlocalhost
    CREATE DATABASE IF NOT EXISTS zen;
    CREATE USER IF NOT EXISTS '${zen_user}'@'%';
    SET PASSWORD FOR '${zen_user}'@'%' = PASSWORD('${zen_pass}');
    GRANT ALL ON zen.* TO '${zen_user}'@'%';
EOSQL

ZEN_USER

fi

# perform common
if [ -d "${config_dir}/nginx.conf" ]; then
    sudo mkdir -p "${WORKSPACE_DIR}/nginx/conf.d/"
    sudo cp -r "${config_dir}/nginx.conf"/* "${WORKSPACE_DIR}/nginx/conf.d/"
fi
