version: '3.5'

services:
    grafana:
        container_name: grafana
        depends_on:
            - mysql
        environment:
            GF_INSTALL_PLUGINS: briangann-datatable-panel 0.0.9,briangann-gauge-panel 0.0.6,digiapulssi-breadcrumb-panel 1.1.6,digrich-bubblechart-panel 1.1.0,grafana-piechart-panel 1.3.9,mtanda-heatmap-epoch-panel 0.1.7,natel-plotly-panel 0.0.6,neocat-cal-heatmap-panel 0.0.3,novalabs-annotations-panel 0.0.1,petrslavotinek-carpetplot-panel 0.1.1,ryantxu-ajax-panel 0.0.6,savantly-heatmap-panel 0.2.0
#            GF_SECURITY_ADMIN_PASSWORD: ${CFG_PASS:?}
            GF_SECURITY_ADMIN_PASSWORD_FILE: /run/secrets/grafana_admin.pwd
            GF_SERVER_ROOT_URL: http://${HOST_IP:?}:3000/grafana
            TZ: "America/New_York"
        hostname: grafana
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}thirdparty/grafana:${GRAFANA_VERSION:-6.5.1}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "8004:3000"
        restart: unless-stopped
        secrets:
            - grafana_admin.pwd    
        user: \"${GRAFANA_UID:?}\"
        volumes:
            - ./grafana/etc:/etc/grafana
            - ./grafana/log:/var/log/grafana
            - ./grafana/var_lib:/var/lib/grafana
 
 
    hubot:
        container_name: hubot
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            HUBOT_BOT_NAME: hubot
#            HUBOT_GITHUB_REPOS_MAP: '{"git":["ballab1/alpinefull","ballab1/bin","ballab1/DBMS-backup","ballab1/hubot","ballab1/jenkins","ballab1/jenkins-files","ballab1/kafka-i386","ballab1/mysql","ballab1/nagios","ballab1/nginx","ballab1/phpmyadmin","ballab1/prod","ballab1/update-check","ballab1/UptimePipeline","ballab1/webhooks","ballab1/zenphoto"]}'
#            HUBOT_GITHUB_TOKEN_FILE: /run/secrets/github.token
#            HUBOT_GITHUB_WEBHOOK_SECRET_FILE: /run/secrets/github_webhook_secret
            HUBOT_SLACK_TOKEN_FILE: /run/secrets/slack.token
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: ${CFG_USER:?}
        hostname: hubot
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/hubot:${CONTAINER_TAG:-96e3fec71b2e2a390e7a8bfe9d87c82001fb9ccf7172a008c9bd2461f478ed0e}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "5858:5858"
            - "8081:8080"
            - "8123:8123"
            - "9004:9001"
        restart: unless-stopped
        secrets:
            - slack.token
            - supervisord.pwd
        volumes:
            - ./hubot/redis:/var/lib/redis
            - ./hubot/log:/var/log
            - ./hubot/conf:/opt/hubot


    jenkins:
        container_name: jenkins
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            JAVA_OPTS: "-Dorg.jenkinsci.plugins.durabletask.BourneShellScript.LAUNCH_DIAGNOSTICS=true"
            JENKINS_GITHUB_CREDENTIALS_FILE: /run/secrets/github.credentials
            JENKINS_GITHUB_EMAIL: ${CFG_EMAIL:?}
            JENKINS_GITHUB_NAME: ${CFG_NAME:?}
            JENKINS_OPTS: "--prefix=/jenkins"
        extra_hosts:
            - "ubuntu-s1:10.1.3.11"
            - "ubuntu-s2:10.1.3.12"
            - "ubuntu-s3:10.1.3.6"
            - "ubuntu-s4:10.1.3.10"
            - "ubuntu-s5:10.1.3.14"
            - "ubuntu-s6:10.1.3.15"
            - "ubuntu-s7:10.1.3.16"
            - "ubuntu-s8:10.1.3.17"
        hostname: jenkins
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/jenkins/${JENKINS_VERSION:-2.190.3}:${CONTAINER_TAG:-4639549e6ba25756beb50bd6632b78cdf58ec0d8e1d4b292b0cf2051a8b7b8b5}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "8080:8080"
        restart: unless-stopped
        secrets:
            - github.credentials
        volumes:
            - ./jenkins/jenkins_home:/var/jenkins_home
            - ~/.ssh:/var/ssh
            - ./jenkins/log:/var/log
            - /var/run/docker.sock:/var/run/docker.sock
#            - /usr/bin/docker:/usr/bin/docker
            - /var/lib/docker:/var/lib/docker


    kafkamgr:
        container_name: kafkamgr
        environment:
            APPLICATION_SECRET_FILE: /run/secrets/kafka.secret
            BASE_ZK_PATH: /
            CONSUMER_PROPERTIES_FILE: /usr/local/kafka-manager/conf/consumer.properties
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            KAFKA_MANAGER_AUTH_ENABLED: 'false'
            KAFKA_MANAGER_LOGLEVEL: INFO
#            KAFKA_MANAGER_PASSWORD_FILE: /run/secrets/kafka_manager.pwd
#            KAFKA_MANAGER_USERNAME: ${CFG_USER:?}
            KAFKA_MANAGER_USERNAME: admin
            KM_HTTP_CONTEXT: /kafkamgr
            ZK_HOSTS: 10.1.3.11:2181,10.1.3.10:2181,255.255.255.255:2181
        hostname: kafkamgr
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/kafka-manager/${KM_VERSION:-2.0.0.2}:${CONTAINER_TAG:-01cd4ea7d936b8b8001f51a48c8f2e48efb6babd396456498194cc1bb977ddf7}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "9000:9000"
        restart: unless-stopped
        secrets:
            - kafka.secret
#            - kafka_manager.pwd
        volumes:
            - ./kafka-manager/log:/usr/local/kafka-manager/home
            - ./kafka-manager/log:/var/log


    mysql:
#        command: --default-authentication-plugin=mysql_native_password
        container_name: mysql
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            MYSQL_PASSWORD_FILE: /run/secrets/mysql.pwd
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root.pwd
            MYSQL_USER: ${CFG_USER:?}
            TZ: America/New_York
        hostname: mysql
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}thirdparty/mysql:${MYSQL_VERSION:-5.7.23}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "3306:3306"
        restart: unless-stopped
        secrets:
            - mysql.pwd
            - mysql_root.pwd
        volumes:
            - ./mysql/conf.d:/etc/mysql/conf.d
            - ./mysql/data:/var/lib/mysql
            - ./mysql/loader:/docker-entrypoint-initdb.d
            - ./mysql/log:/var/log


    nagios:
        container_name: nagios
        depends_on:
            - mysql
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            NAGIOS_GITHUB_CREDENTIALS_FILE: /run/secrets/github.credentials
            NAGIOS_GITHUB_EMAIL: ${CFG_EMAIL:?}
            NAGIOS_GITHUB_NAME: ${CFG_NAME:?}
            NAGIOS_PASS_FILE: /run/secrets/nagios.pwd
            NAGIOS_REPO: github.com/ballab1/DBMS-backup
            NAGIOS_URL_HTML_PATH: /nagios
            NAGIOS_USER: ${CFG_USER:?}
            NCONF_DBHOST: mysql
            NCONF_DBNAME: nconf
            NCONF_DBPASS_FILE: /run/secrets/mysql.pwd
            NCONF_DBUSER: ${CFG_USER:?}
            PWD_PROTECTED: 'true'
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd         
            SUPERVISORD_USER: ${CFG_USER:?}
        extra_hosts:
            - \"docker-host:${HOST_IP:?}\"
            - "cable-modem:192.168.1.100"
            - "router:10.1.3.1"
            - "printer:10.1.3.2"
            - "wdmycloud:10.1.3.5"
            - "ubuntu-s1:10.1.3.11"
            - "ubuntu-s2:10.1.3.12"
            - "ubuntu-s3:10.1.3.6"
            - "ubuntu-s4:10.1.3.10"
            - "ubuntu-s5:10.1.3.14"
            - "ubuntu-s6:10.1.3.15"
            - "ubuntu-s7:10.1.3.16"
            - "ubuntu-s8:10.1.3.17"
        hostname: nagios
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/nagios/${NCORE_VERSION:-4.4.5}:${CONTAINER_TAG:-50643c91ba4286c15bdf34a1f7d3921c944c7813c94807e9251c91ab8cfbe0f6}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "25:25"
            - "8001:80"
            - "9001:9001"
        restart: unless-stopped
        secrets:
            - github.credentials
            - mysql.pwd
            - nagios.pwd
            - supervisord.pwd
        volumes:
            - ./nagios/archives:/usr/local/nagios/var/archives
            - ./nagios/config:/usr/local/nagios/share/nconf/output
            - ./nagios/log:/var/log
            - ./nagios/rrd:/usr/local/nagios/var/rrd


    nginx:
        container_name: nginx
        depends_on:
            - jenkins
            - kafkamgr
            - nagios
            - phpmyadmin
            - webdav
            - zen
        environment:
#            NGINX_DEBUG: 1
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
#            PWD_PROTECTED: 'true'
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: ${CFG_USER:?}
            WEB_USER_ID: ${CFG_USER:?}
            WEB_USER_PASS_FILE: /run/secrets/web_user.pwd
        extra_hosts:
            - "ubuntu-s1:10.1.3.11"
            - "ubuntu-s2:10.1.3.12"
            - "ubuntu-s3:10.1.3.6"
            - "ubuntu-s4:10.1.3.10"
            - "ubuntu-s5:10.1.3.14"
            - "ubuntu-s6:10.1.3.15"
            - "ubuntu-s7:10.1.3.16"
            - "ubuntu-s8:10.1.3.17"
        hostname: nginx
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/nginx-proxy/${NGINX_VERSION:-1.16.1}:${CONTAINER_TAG:-cfe0f5ab1bfa6266bc87d8ff68b37f0e87abf4f5ccd16dce2543b33730293185}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "80:80"
            - "443:443"
            - "9005:9001"
        restart: unless-stopped
        secrets:
            - supervisord.pwd
            - web_user.pwd
            - server.crt
            - server.key
            - dhparam.pem
        volumes:
            - ./nginx/log:/var/log
            - ./www:/var/www
            - ./nginx/conf.d:/etc/nginx/proxy.conf


    phpmyadmin:
        container_name: phpmyadmin
        depends_on:
            - mysql
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
#            MYSQL_PASSWORD_FILE: /run/secrets/mysql.pwd
#            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root.pwd
#            MYSQL_USER: ${CFG_USER:?}
#            PMA_ABSOLUTE_URI: http://${HOST_IP:?}:8002/phpmyadmin
#            PMA_ARBITRARY: 1
            PMA_HOST: mysql
            PMA_PASSWORD_FILE: /run/secrets/pma.pwd
            PMA_PORT: 3306
            PMA_USER: ${CFG_USER:?}
            PMA_VERBOSE: 1
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: ${CFG_USER:?}
            USER: www-data
        hostname: phpmyadmin
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/phpmyadmin/${PHPMYADMIN_VERSION:-4.9.2}:${CONTAINER_TAG:-2c06e4dff7833eb284c382453a4d281ab115a6211b95f94c310f66b831c6788c}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "8002:80"
            - "9102:9000"
            - "9002:9001"
        restart: unless-stopped
        secrets:
#            - mysql.pwd
#            - mysql_root.pwd
            - pma.pwd
            - supervisord.pwd
        volumes:
            - ./phpmyadmin/log:/var/log
#            - ./phpmyadmin/etc:/etc/phpmyadmin


    registry:
        container_name: registry
        environment:
            ENV_DOCKER_REGISTRY_HOST: ubuntu-s2
            ENV_DOCKER_REGISTRY_PORT: 5000
            ENV_MODE_BROWSE_ONLY: 'false'
            TZ: "America/New_York"
        extra_hosts:
            - "ubuntu-s2:10.1.3.12"
        hostname: registry
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}thirdparty/docker-registry-frontend:${DREGISTRY_FE_VERSION:-v2}
        labels:
            com.github.url: "https://github.com/kwk/docker-registry-frontend"
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "8082:80"
        restart: unless-stopped
        volumes:
            - ./registryfe/apache2.conf:/etc/apache/apache2.conf
            - ./registryfe/log:/var/log


    smee:
        container_name: smee
        depends_on:
            - jenkins
        environment:
#            SMEE_PORT: 8080
#            SMEE_PATH: /jenkins/github-webhook/
            SMEE_TARGET: http://jenkins:8080/jenkins/generic-webhook-trigger/invoke
            SMEE_URL: https://smee.io/F9gFiEeTza0Po4Rd
        hostname: smee
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/smee:${CONTAINER_TAG:-590c9dd40abedaf5467547da1596cbc45f902f1f1baaa643396dc00f29588f0b}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        restart: unless-stopped               # only use when building a 'service container' 


    supervisorm:
        container_name: supervisorm
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: ${CFG_USER:?}
        hostname: supervisorm
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/cesi/${CESI_VERSION:-2.6.7}:${CONTAINER_TAG:-121f02f7c66c6710aadf28024ccc8f69c0591e161c5f0709cb323bdd0a68b5b7}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "8008:5000"
            - "9008:9001"
        restart: unless-stopped
        secrets:
            - supervisord.pwd
        volumes:
            - ./supervisorm/log:/var/log


    webdav:
        container_name: webdav
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            WEBDAV_USER: ${CFG_USER:?}
            WEBDAV_PASS_FILE: /run/secrets/webdav.pwd
        hostname: webdav
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/webdav:${CONTAINER_TAG:-d7b4d9e41806d9bac3e9950f8f56c768e829861eb87e9bf254cd033c6bda3d1f}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "8007:80"
        restart: unless-stopped
        secrets:
            - webdav.pwd
        volumes:
            - /mnt/Guest:/webdav/Guest
            - /mnt/Seagate:/webdav/Seagate
            - /mnt/WDMyCloud:/webdav/WDMyCloud
            - ./webdav/log:/var/log 


    zen:
        container_name: zen
        depends_on:
            - mysql
        environment:
#            NGINX_DEBUG: 1
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: ${CFG_USER:?}
            ZEN_HOST: mysql
            ZEN_PASS_FILE: /run/secrets/zenphoto.pwd
            ZEN_USER: ${CFG_USER:?}
#            WWW_UID: '1000'
        hostname: zen
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/zenphoto/${ZEN_VERSION:-1.5.6}:${CONTAINER_TAG:-0be72133ef9de5b095e782b9a760a8cb201d865cedcc1aa17935e8bd149e5030}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "8003:80"
            - "9003:9001"
        restart: unless-stopped
        secrets:
            - supervisord.pwd
            - zenphoto.pwd
        volumes:
            - ./zen/log:/var/log 
            - ./zen/photos:/var/www/photos/albums
            - ./zen/cache:/var/www/photos/cache
            - ./zen/uploaded:/var/www/photos/uploaded


networks:
   support-net:
       ipam:
           config:
               - subnet: 192.168.96.0/24
       name: support-container-net

secrets:
   github.credentials:
     file: .secrets/secrets/credentials.github
   grafana_admin.pwd:
     file: .secrets/secrets/grafana_admin.pwd
   kafka.secret:
     file: .secrets/secrets/kafkamgr.secret
   kafka_manager.pwd:
     file: .secrets/secrets/bobb.pwd
   mysql.pwd:
     file: .secrets/secrets/bobb.pwd
   mysql_root.pwd:
     file: .secrets/secrets/bobb.pwd
   nagios.pwd:
     file: .secrets/secrets/bobb.pwd
   pma.pwd:
     file: .secrets/secrets/bobb.pwd
#   github.token:
#     file: .secrets/secrets/hubot_token.github
   slack.token:
     file: .secrets/secrets/hubot_token.slack
   supervisord.pwd:      
     file: .secrets/secrets/bobb.pwd
   web_user.pwd:
     file: .secrets/secrets/bobb.pwd
   webdav.pwd:
     file: .secrets/secrets/bobb.pwd
   zenphoto.pwd:
     file: .secrets/secrets/bobb.pwd
   server.crt:
     file: .secrets/ssl/server.crt
   server.key:
     file: .secrets/ssl/server.key
   dhparam.pem:
     file: .secrets/ssl/dhparam.pem
