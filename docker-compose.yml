version: '3.3'

services:
    broker:
        command: kafka broker
        container_name: broker
        depends_on:
            - zookeeper
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            KAFKA_ADVERTISED_HOST_NAME: 255.255.255.255
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://255.255.255.255:9092
            KAFKA_BROKER_ID: 3
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_NUM_PARTITIONS: 1
            KAFKA_ZOOKEEPER_CONNECT: ubuntu-s1:2181,ubuntu-s4:2181,ubuntu-s3:2181
            ZOOKEEPER_TIMEOUT: 6000
        extra_hosts:
            - "ubuntu-s3:10.1.3.6"
            - "ubuntu-s1:10.1.3.11"
            - "ubuntu-s2:10.1.3.12"
            - "ubuntu-s4:10.1.3.10"
        hostname: broker
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/kafka/${KAFKA_VERSION:-2.2.0}:${CONTAINER_TAG:-30b44efaba44e9ca62e79ad73343fbd46ab1a4a542c35dcfe271c0cd011eb135}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        links:
           - zookeeper
        ports:
            - "9092:9092"
        restart: unless-stopped
        volumes:
            - ./kafka-broker/data:/usr/local/kafka/data
            - ./kafka-broker/logs:/usr/local/kafka/logs
            - ./kafka-broker/log:/var/log

    grafana:
        container_name: grafana
        environment:
            GF_INSTALL_PLUGINS: briangann-datatable-panel 0.0.6,briangann-gauge-panel 0.0.6,digiapulssi-breadcrumb-panel 1.1.5,digrich-bubblechart-panel 1.1.0,grafana-piechart-panel 1.3.6,mtanda-heatmap-epoch-panel 0.1.7,natel-plotly-panel 0.0.6,neocat-cal-heatmap-panel 0.0.3,novalabs-annotations-panel 0.0.1,petrslavotinek-carpetplot-panel 0.1.1,ryantxu-ajax-panel 0.0.6,savantly-heatmap-panel 0.2.0
#            GF_SECURITY_ADMIN_PASSWORD: $CFG_PASS
            GF_SECURITY_ADMIN_PASSWORD_FILE: /run/secrets/grafana_admin.pwd
            GF_SERVER_ROOT_URL: http://255.255.255.255:3000/grafana
            TZ: "America/New_York"
        hostname: grafana
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}grafana:${GRAFANA_VERSION:-6.1.3}
        links:
            - mysql
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        ports:
            - "8004:3000"
        restart: unless-stopped
        secrets:
            - grafana_admin.pwd    
        user: "1000"
        volumes:
            - ./grafana/etc:/etc/grafana
            - ./grafana/log:/var/log/grafana
            - ./grafana/var_lib:/var/lib/grafana
 
 
    hubot:
        container_name: hubot
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            HUBOT_BOT_NAME: hubot
#            HUBOT_GITHUB_REPOS_MAP: '{"git":["ballab1/alpinefull","ballab1/bin","ballab1/DBMS-backup","ballab1/hubot","ballab1/jenkins","ballab1/jenkins-files","ballab1/kafka-i386","ballab1/mysql","ballab1/nagios","ballab1/nginx","ballab1/phpmyadmin","ballab1/prod","ballab1/update-check","ballab1/UptimePipeline","ballab1/webhooks","ballab1/zenphoto"]}'
#            HUBOT_GITHUB_TOKEN_FILE: /run/secrets/github.token
#            HUBOT_GITHUB_WEBHOOK_SECRET_FILE: /run/secrets/github_webhook_secret
            HUBOT_SLACK_TOKEN_FILE: /run/secrets/slack.token
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: $CFG_USER
        hostname: hubot
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/hubot:${CONTAINER_TAG:-d02a1d8137dea6eecf2a9b87fb321fdb2c51e66158c9ac11f3666cc70b222c12}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        ports:
            - "5858:5858"
            - "8081:8080"
            - "8123:8123"
            - "9004:9001"
        restart: unless-stopped
        secrets:
            - slack.token
            - supervisord.pwd
        volumes:
            - ./hubot/redis:/var/lib/redis
            - ./hubot/log:/var/log
            - ./hubot/conf:/opt/hubot


    jenkins:
        container_name: jenkins
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            JENKINS_GITHUB_CREDENTIALS_FILE: /run/secrets/github.credentials
            JENKINS_GITHUB_EMAIL: $CFG_EMAIL
            JENKINS_GITHUB_NAME: $CFG_NAME
            JENKINS_OPTS: "--prefix=/jenkins"
        extra_hosts:
            - "ubuntu-s1:10.1.3.11"
            - "ubuntu-s2:10.1.3.12"
            - "ubuntu-s3:10.1.3.6"
            - "ubuntu-s4:10.1.3.10"
            - "ubuntu-s5:10.1.3.14"
            - "ubuntu-s6:10.1.3.15"
        hostname: jenkins
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/jenkins/${JENKINS_VERSION:-2.164.1}:${CONTAINER_TAG:-97155a63544fea920d3895e0d9702153c008dc67da4fb11a05e65ec9fd0f73fd}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        ports:
            - "8080:8080"
        restart: unless-stopped
        secrets:
            - github.credentials
        volumes:
            - ./jenkins/jenkins_home:/var/jenkins_home
            - ~/.ssh:/var/ssh
            - ./jenkins/log:/var/log
            - /var/run/docker.sock:/var/run/docker.sock
#            - /usr/bin/docker:/usr/bin/docker
            - /var/lib/docker:/var/lib/docker


    kafkamgr:
        container_name: kafkamgr
        environment:
            APPLICATION_SECRET_FILE: /run/secrets/kafka.secret
            BASE_ZK_PATH: /
            CONSUMER_PROPERTIES_FILE: /usr/local/kafka-manager/conf/consumer.properties
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            KAFKA_MANAGER_AUTH_ENABLED: 'false'
            KAFKA_MANAGER_LOGLEVEL: INFO
#            KAFKA_MANAGER_PASSWORD_FILE: /run/secrets/kafka_manager.pwd
#            KAFKA_MANAGER_USERNAME: $CFG_USER
            KAFKA_MANAGER_USERNAME: admin
            KM_HTTP_CONTEXT: /kafkamgr
            ZK_HOSTS: 10.1.3.11:2181,10.1.3.10:2181,255.255.255.255:2181
        hostname: kafkamgr
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/kafka-manager/${KM_VERSION:-1.3.3.23}:${CONTAINER_TAG:-3b668b7c0b0a062a95e0c8019798712e8a9754c658c2d5876538cac360de8d56}
        links:
            - zookeeper:zookeeper
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        ports:
            - "9000:9000"
        restart: unless-stopped
        secrets:
            - kafka.secret
#            - kafka_manager.pwd
        volumes:
            - ./kafka-manager/log:/usr/local/kafka-manager/home
            - ./kafka-manager/log:/var/log


    mysql:
#        command: --default-authentication-plugin=mysql_native_password
        container_name: mysql
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            MYSQL_PASSWORD_FILE: /run/secrets/mysql.pwd
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root.pwd
            MYSQL_USER: $CFG_USER
            TZ: America/New_York
        hostname: mysql
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}mysql:${MYSQL_VERSION:-5.7.23}
#        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/mysql:${MYSQL_VERSION:-5.7.23}
#        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/mysql/${MYSQL_VERSION:-5.7.23}:${CONTAINER_TAG:-latest}
#        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/mysql/${MYSQL_VERSION:-8.0.11}:${CONTAINER_TAG:-latest}
#        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/mysql/${MYSQL_VERSION:-8.0.12}:${CONTAINER_TAG:-latest}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        ports:
            - "3306:3306"
        restart: unless-stopped
        secrets:
            - mysql.pwd
            - mysql_root.pwd
        volumes:
            - ./mysql/conf.d:/etc/mysql/conf.d
            - ./mysql/data:/var/lib/mysql
            - ./mysql/loader:/docker-entrypoint-initdb.d
            - ./mysql/log:/var/log


    nagios:
        container_name: nagios
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            NAGIOS_GITHUB_CREDENTIALS_FILE: /run/secrets/github.credentials
            NAGIOS_GITHUB_EMAIL: $CFG_EMAIL
            NAGIOS_GITHUB_NAME: $CFG_NAME
            NAGIOS_PASS_FILE: /run/secrets/nagios.pwd
            NAGIOS_REPO: github.com/ballab1/DBMS-backup
            NAGIOS_USER: $CFG_USER
            NCONF_DBHOST: mysql
            NCONF_DBNAME: nconf
            NCONF_DBPASS_FILE: /run/secrets/mysql.pwd
            NCONF_DBUSER: $CFG_USER
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd         
            SUPERVISORD_USER: $CFG_USER
        extra_hosts:
            - "cable-modem:192.168.1.100"
            - "router:10.1.3.1"
            - "printer:10.1.3.2"
            - "wdmycloud:10.1.3.5"
            - "ubuntu-s1:10.1.3.11"
            - "ubuntu-s2:10.1.3.12"
            - "ubuntu-s3:10.1.3.6"
            - "ubuntu-s4:10.1.3.10"
            - "ubuntu-s5:10.1.3.14"
        hostname: nagios
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/nagios/${NCORE_VERSION:-4.4.3}:${CONTAINER_TAG:-7ec74a109edff3b7c3d94aaafcdf29352a42a05fdfe13c6f07b28ec0fd853f97}
        links:
            - mysql:mysql
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        ports:
            - "25:25"
            - "8001:80"
            - "9001:9001"
        restart: unless-stopped
        secrets:
            - github.credentials
            - mysql.pwd
            - nagios.pwd
            - supervisord.pwd
        volumes:
            - ./nagios/archives:/usr/local/nagios/var/archives
            - ./nagios/config:/usr/local/nagios/share/nconf/output
            - ./nagios/log:/var/log
            - ./nagios/rrd:/usr/local/nagios/var/rrd


    nginx:
        container_name: nginx
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
#            PWD_PROTECTED: 'true'
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: $CFG_USER
            WEB_USER_ID: $CFG_USER
            WEB_USER_PASS_FILE: /run/secrets/web_user.pwd
        extra_hosts:
            - "ubuntu-s1:10.1.3.11"
            - "ubuntu-s2:10.1.3.12"
            - "ubuntu-s3:10.1.3.6"
            - "ubuntu-s4:10.1.3.10"
            - "ubuntu-s5:10.1.3.14"
        hostname: nginx
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/nginx-proxy/${NGINX_VERSION:-1.14.2}:${CONTAINER_TAG:-748cb42912fd37d1e8bcdb30df5aa7c79f629464bfbf8a66ae922425b3f49e83}
        links:
            - jenkins:jenkins
            - kafkamgr:kafkamgr
            - nagios:nagios
            - phpmyadmin:phpmyadmin
            - webdav:webdav
            - zen:zen
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        ports:
            - "80:80"
            - "443:443"
            - "9005:9001"
        restart: unless-stopped
        secrets:
            - supervisord.pwd
            - web_user.pwd
            - certificate.crt
            - server.key
            - dhparam.pem
        volumes:
            - ./nginx/log:/var/log
            - ./www:/var/www
            - ./.secrets/EMC:/mnt/data/ca-certificates
#            - ./nginx/etc:/etc/nginx

    phpmyadmin:
        container_name: phpmyadmin
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
#            MYSQL_PASSWORD_FILE: /run/secrets/mysql.pwd
#            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root.pwd
#            MYSQL_USER: $CFG_USER
#            PMA_ABSOLUTE_URI: http://255.255.255.255:8002/phpmyadmin
#            PMA_ARBITRARY: 1
            PMA_HOST: mysql
            PMA_PASSWORD_FILE: /run/secrets/pma.pwd
            PMA_PORT: 3306
            PMA_USER: $CFG_USER
            PMA_VERBOSE: 1
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: $CFG_USER
            USER: www-data
        hostname: phpmyadmin
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/phpmyadmin/${PHPMYADMIN_VERSION:-4.8.5}:${CONTAINER_TAG:-0843a76632105ec4a5c842862e3fd9bffcb897f899ae9aee88f35a1a9858ebc7}
        links:
            - mysql:mysql
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        ports:
            - "8002:80"
            - "9102:9000"
            - "9002:9001"
        restart: unless-stopped
        secrets:
#            - mysql.pwd
#            - mysql_root.pwd
            - pma.pwd
            - supervisord.pwd
        volumes:
            - ./phpmyadmin/log:/var/log
#            - ./phpmyadmin/etc:/etc/phpmyadmin

    supervisorm:
        container_name: supervisorm
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: $CFG_USER
        hostname: supervisorm
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/cesi/${CESI_VERSION:-2.6.7}:${CONTAINER_TAG:-d0c7ec7bcce85899ee4cabe0f43c1a2bf373a664c440e948c91d00b46f664b82}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        ports:
            - "8008:5000"
            - "9008:9001"
        restart: unless-stopped
        secrets:
            - supervisord.pwd
        volumes:
            - ./cesi/log:/var/log

    webdav:
        container_name: webdav
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            WEBDAV_USER: $CFG_USER
            WEBDAV_PASS_FILE: /run/secrets/webdav.pwd
        hostname: webdav
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/webdav:${CONTAINER_TAG:-136aac2d882119ef6fbc6136c65e1b72d9fdd58560ba9bd40004ad99cc60c0f2}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        ports:
            - "8007:80"
        restart: unless-stopped
        secrets:
            - webdav.pwd
        volumes:
            - ./webdav/storage:/webdav
            - ./webdav/log:/var/log 


    zen:
        container_name: zen
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: $CFG_USER
            ZEN_HOST: mysql
            ZEN_PASS_FILE: /run/secrets/zenphoto.pwd
            ZEN_USER: $CFG_USER
#            WWW_UID: '1000'
        hostname: zen
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/zenphoto/${ZEN_VERSION:-1.5.1}:${CONTAINER_TAG:-d2e8ae91d62d0770bb2ac569739174ecbeed811ced09a49820e3512218dfbc42}
        links:
            - mysql
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        ports:
            - "8003:80"
            - "9003:9001"
        restart: unless-stopped
        secrets:
            - supervisord.pwd
            - zenphoto.pwd
        volumes:
            - ./zen/log:/var/log 
            - ./zen/photos:/var/www/albums

    zookeeper:
        command: kafka zookeeper
        container_name: zookeeper
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            ZOOKEEPER_MY_ID: 3
            ZOOKEEPER_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
            ZOOKEEPER_INIT_LIMIT: 10
            ZOOKEEPER_SYNC_LIMIT: 5
        extra_hosts:
            - "ubuntu-s1:10.1.3.11"
            - "ubuntu-s2:10.1.3.12"
            - "ubuntu-s3:10.1.3.6"
            - "ubuntu-s4:10.1.3.10"
            - "ubuntu-s5:10.1.3.14"
        hostname: zookeeper
        image: ${DOCKER_REGISTRY:-ubuntu-s2:5000/}${CONTAINER_OS:-alpine}/kafka/${KAFKA_VERSION:-2.2.0}:${CONTAINER_TAG:-30b44efaba44e9ca62e79ad73343fbd46ab1a4a542c35dcfe271c0cd011eb135}
        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "3"
        ports:
            - "2181:2181"
        restart: unless-stopped
        volumes:
            - ./kafka-zookeeper/data:/usr/local/kafka/data
            - ./kafka-zookeeper/logs:/usr/local/kafka/logs 
            - ./kafka-zookeeper/log:/var/log

secrets:
   github.credentials:
     file: .secrets/secrets/credentials.github
   grafana_admin.pwd:
     file: .secrets/secrets/grafana_admin.pwd
   kafka.secret:
     file: .secrets/secrets/kafkamgr.secret
   kafka_manager.pwd:
     file: .secrets/secrets/bobb.pwd
   mysql.pwd:
     file: .secrets/secrets/bobb.pwd
   mysql_root.pwd:
     file: .secrets/secrets/bobb.pwd
   nagios.pwd:
     file: .secrets/secrets/bobb.pwd
   pma.pwd:
     file: .secrets/secrets/bobb.pwd
#   github.token:
#     file: .secrets/secrets/hubot_token.github
   slack.token:
     file: .secrets/secrets/hubot_token.slack
   supervisord.pwd:      
     file: .secrets/secrets/bobb.pwd
   web_user.pwd:
     file: .secrets/secrets/bobb.pwd
   webdav.pwd:
     file: .secrets/secrets/bobb.pwd
   zenphoto.pwd:
     file: .secrets/secrets/bobb.pwd
   certificate.crt:
     file: .secrets/ssl/server.crt
   server.key:
     file: .secrets/ssl/server.key
   dhparam.pem:
     file: .secrets/ssl/dhparam.pem
