version: '3.5'

services:
#    cadvisor:
#        container_name: cadvisor
#        dns: 10.3.1.1
#        dns_search:
#            - ubuntu.home
#            - home
#        hostname: cadvisor.s3.home
#        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}thirdparty/cadvisor:${CADVISOR_VERSION:-v0.36.0}
#        logging:
#            driver: json-file
#            options:
#                max-file: "3"
#                max-size: "10m"
#        networks:
#            - support-net
#        ports:
#            - "7080:8080"
#        restart: unless-stopped
#        volumes:
#            - /:/rootfs:ro
#            - /var/run:/var/run:ro
#            - /sys:/sys:ro
#            - /var/lib/docker/:/var/lib/docker:ro
#            - /dev/disk/:/dev/disk:ro
   
 
    grafana:
        container_name: grafana
        depends_on:
            - mysql
        dns: 10.3.1.1
        dns_search:
            - ubuntu.home
            - home
        environment:
            GF_INSTALL_PLUGINS: briangann-datatable-panel 1.0.2,briangann-gauge-panel 0.0.6,digiapulssi-breadcrumb-panel 1.1.6,digrich-bubblechart-panel 1.2.0,grafana-piechart-panel 1.6.1,mtanda-heatmap-epoch-panel 0.1.7,natel-plotly-panel 0.0.6,neocat-cal-heatmap-panel 0.0.3,novalabs-annotations-panel 0.0.1,petrslavotinek-carpetplot-panel 0.1.1,ryantxu-ajax-panel 0.0.7-dev,savantly-heatmap-panel 0.2.0,grafana-github-datasource 1.0.6,sni-pnp-datasource 1.0.7
#            GF_SECURITY_ADMIN_PASSWORD: ${CFG_PASS:?}
            GF_SECURITY_ADMIN_PASSWORD_FILE: /run/secrets/grafana_admin.pwd
            GF_SERVER_ROOT_URL: http://${HOST_IP:?}:3000/grafana
            GF_PATHS_PROVISIONING: /etc/provisioning
#            GF_PATHS_DATA: /var/lib/grafana
#            GF_PATHS_LOGS: /var/log/grafana
#            GF_PATHS_PLUGINS: /var/lib/grafana/plugins
#            GF_SECURITY_ADMIN_PASSWORD: ${CFG_PASS:?}
            GF_SECURITY_ADMIN_PASSWORD_FILE: /run/secrets/grafana_admin.pwd
            GF_SERVER_ROOT_URL: http://${HOST_IP:?}:3000/grafana
            GF_PATHS_PROVISIONING: /etc/provisioning
            TZ: "America/New_York"
        hostname: grafana.s3.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}thirdparty/grafana:${GRAFANA_VERSION:-7.3.6}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "8004:3000"
        restart: unless-stopped
        secrets:
            - grafana_admin.pwd    
        user: "${GRAFANA_UID:?}"
        volumes:
            - ./grafana/etc:/etc/grafana
            - ./grafana/log:/var/log/grafana
            - ./grafana/var_lib:/var/lib/grafana
 
 
    hubot:
        container_name: hubot
        dns: 10.3.1.1
        dns_search:
            - ubuntu.home
            - home
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            HUBOT_BOT_NAME: hubot
#            HUBOT_GITHUB_REPOS_MAP: '{"git":["ballab1/alpinefull","ballab1/bin","ballab1/DBMS-backup","ballab1/hubot","ballab1/jenkins","ballab1/jenkins-files","ballab1/kafka-i386","ballab1/mysql","ballab1/nagios","ballab1/nginx","ballab1/phpmyadmin","ballab1/prod","ballab1/update-check","ballab1/UptimePipeline","ballab1/webhooks""]}'
#            HUBOT_GITHUB_TOKEN_FILE: /run/secrets/github.token
#            HUBOT_GITHUB_WEBHOOK_SECRET_FILE: /run/secrets/github_webhook_secret
            HUBOT_SLACK_TOKEN_FILE: /run/secrets/slack.token
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: ${CFG_USER:?}
        hostname: hubot.s3.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/hubot:${CONTAINER_TAG:-e0a1ba29aa5a1f7fe5c915cf1c77e527718fabcd24a36e98d936bb2c2e169462}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "5858:5858"
            - "8081:8080"
            - "8123:8123"
            - "9004:9001"
        restart: unless-stopped
        secrets:
            - slack.token
            - supervisord.pwd
        volumes:
            - ./hubot/redis:/var/lib/redis
            - ./hubot/log:/var/log
            - ./hubot/conf:/opt/hubot


    jenkins:
        container_name: jenkins
        dns: 10.3.1.1
        dns_search:
            - ubuntu.home
            - home
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            JAVA_OPTS: "-Dorg.jenkinsci.plugins.durabletask.BourneShellScript.LAUNCH_DIAGNOSTICS=true"
            JENKINS_GITHUB_CREDENTIALS_FILE: /run/secrets/github.credentials
            JENKINS_GITHUB_EMAIL: ${CFG_EMAIL:?}
            JENKINS_GITHUB_NAME: ${CFG_NAME:?}
            JENKINS_OPTS: "--prefix=/jenkins"
        hostname: jenkins.s3.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/jenkins/${JENKINS_VERSION:-2.263.1}:${CONTAINER_TAG:-787d5309992795a0943632cd0e9613af54c9c651398a40b820e768f507edd485}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "8070:8080"
            - "50000:50000"
        restart: unless-stopped
        secrets:
            - github.credentials
        volumes:
            - ./jenkins/jenkins_home:/var/jenkins_home
            - ~/.ssh:/var/ssh
            - ./jenkins/log:/var/log
            - /var/run/docker.sock:/var/run/docker.sock
#            - /usr/bin/docker:/usr/bin/docker
            - /var/lib/docker:/var/lib/docker
            - /etc/docker:/etc/docker


#    metricbeat:
#        container_name: metricbeat
#        dns: 10.3.1.1
#        dns_search:
#            - ubuntu.home
#            - home
#        hostname: metricbeat
#        image: ${DOCKER_REGISTRY:-ubuntu-s2.home:5000/}thirdparty/metricbeat:${METRICBEAT_VERSION:-7.9.3}
#        labels:
#            co.elastic.metrics/hosts: '$${data.host}:$${data.port}'
#            co.elastic.metrics/metricsets: status
#            co.elastic.metrics/module: metricbeat
#            co.elastic.metrics/period: 10s
#        logging:
#            driver: json-file
#            options:
#                max-file: "3"
#                max-size: "10m"
#        networks:
#            - support-net
#        restart: unless-stopped
#        user: root
#        volumes:
#            - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
##            - ./metricbeat/metricbeat.yml:/etc/metricbeat/metricbeat.yml:ro
#            - ./metricbeat/modules.d:/usr/share/metricbeat/modules.d:ro
#            - ./metricbeat/log:/var/log
#            - /var/run/docker.sock:/var/run/docker.sock
#            - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
#            - /proc:/hostfs/proc:ro
#            - /:/hostfs:ro
#
#
    mysql:
#        command: --default-authentication-plugin=mysql_native_password
        container_name: mysql
        dns: 10.3.1.1
        dns_search:
            - ubuntu.home
            - home
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            MYSQL_PASSWORD_FILE: /run/secrets/mysql.pwd
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root.pwd
            MYSQL_USER: ${CFG_USER:?}
            TZ: America/New_York
        hostname: mysql.s3.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}thirdparty/mysql:${MYSQL_VERSION:-5.7.23}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "3306:3306"
        restart: unless-stopped
        secrets:
            - mysql.pwd
            - mysql_root.pwd
        volumes:
            - ./mysql/conf.d:/etc/mysql/conf.d
            - ./mysql/data:/var/lib/mysql
            - ./mysql/loader:/docker-entrypoint-initdb.d
            - ./mysql/log:/var/log


    nagios:
        container_name: nagios
        depends_on:
            - mysql
        dns: 10.3.1.1
        dns_search:
            - ubuntu.home
            - home
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            NAGIOS_LOG_SYSLOG: 1
            NAGIOS_GITHUB_CREDENTIALS_FILE: /run/secrets/github.credentials
            NAGIOS_GITHUB_EMAIL: ${CFG_EMAIL:?}
            NAGIOS_GITHUB_NAME: ${CFG_NAME:?}
            NAGIOS_PASS_FILE: /run/secrets/nagios.pwd
            NAGIOS_REPO: github.com/ballab1/DBMS-backup
            NAGIOS_USER: ${CFG_USER:?}
            NGINX_LOG_ACCESS: 'syslog:server=10.3.1.15:514,tag=nginx_access json'
            NGINX_LOG_ERRORS: 'syslog:server=10.3.1.15:514,tag=nginx_error notice'
            NCONF_DBHOST: mysql
            NCONF_DBNAME: nconf
            NCONF_DBPASS_FILE: /run/secrets/mysql.pwd
            NCONF_DBUSER: ${CFG_USER:?}
#            NCONF_DEBUG_MODE: 1              # [0|1] 
#            NCONF_DEBUG_GENERATE: 5          # [1=ERROR|2=WARN|3=INFO|4=DEBUG|5=TRACE] 
#            NGINX_DEBUG: 1
            PNP4NAGIOS_LOGLEVEL: 4
            PWD_PROTECTED: 'true'
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd         
            SUPERVISORD_USER: ${CFG_USER:?}
        extra_hosts:
            - "docker-host:${HOST_IP:?}"
        hostname: nagios.s3.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/nagios/${NAGIOS_VERSION:-4.4.6}:${CONTAINER_TAG:-ee84428e9ce142ba4cb696e2b06ba0cea89f720f371bf21093fc4ac000cc7852}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "25:25"
            - "8001:80"
            - "9001:9001"
        restart: unless-stopped
        secrets:
            - github.credentials
            - mysql.pwd
            - nagios.pwd
            - supervisord.pwd
        volumes:
            - ~/.inf:/usr/local/nagios/inf
            - ~/.ssh:/var/ssh
            - ./nagios/archives:/var/nagios/archives
            - ./nagios/config:/var/www/nconf/output
            - ./nagios/log:/var/log
            - ./nagios/rrd:/var/nagios/perfdata
            - /var/run/docker.sock:/var/run/docker.sock
#            - /usr/bin/docker:/usr/bin/docker
            - /var/lib/docker:/var/lib/docker


    nginx:
        container_name: nginx
        dns: 10.3.1.1
        dns_search:
            - ubuntu.home
            - home
        depends_on:
            - jenkins
            - nagios
            - phpmyadmin
            - webdav
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
#            NGINX_DEBUG: 1
#            PWD_PROTECTED: 'false'
            NGINX_LOG_ACCESS: 'syslog:server=10.3.1.15:514,tag=nginx_access json'
            NGINX_LOG_ERRORS: 'syslog:server=10.3.1.15:514,tag=nginx_error notice'
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: ${CFG_USER:?}
            WEB_USER_ID: ${CFG_USER:?}
            WEB_USER_PASS_FILE: /run/secrets/web_user.pwd
        hostname: nginx.s3.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/nginx-proxy/${NGINX_VERSION:-1.18.0}:${CONTAINER_TAG:-0e253356c6c2c02385dce70bc9bc05627b110ea15bab073082c272a9196719e0}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "80:80"
            - "443:443"
            - "9005:9001"
        restart: unless-stopped
        secrets:
            - supervisord.pwd
            - web_user.pwd
            - server.crt
            - server.key
            - dhparam.pem
        volumes:
            - ./nginx/log:/var/log
            - ./www:/var/www
            - ./nginx/conf.d:/etc/nginx/proxy.conf


    phpmyadmin:
        container_name: phpmyadmin
        dns: 10.3.1.1
        dns_search:
            - ubuntu.home
            - home
        depends_on:
            - mysql
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
#            MYSQL_PASSWORD_FILE: /run/secrets/mysql.pwd
#            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root.pwd
#            MYSQL_USER: ${CFG_USER:?}
#            PMA_ABSOLUTE_URI: http://${HOST_IP:?}:8002/phpmyadmin
#            PMA_ARBITRARY: 1
            PMA_HOST: mysql
            PMA_PASSWORD_FILE: /run/secrets/pma.pwd
            PMA_PORT: 3306
            PMA_USER: ${CFG_USER:?}
            PMA_VERBOSE: 1
#            NGINX_LOG_ACCESS: 'syslog:server=10.3.1.15:514,tag=nginx_access json'
#            NGINX_LOG_ERRORS: 'syslog:server=10.3.1.15:514,tag=nginx_error notice'
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: ${CFG_USER:?}
            USER: www-data
        hostname: phpmyadmin.s3.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/phpmyadmin/${PHPMYADMIN_VERSION:-5.0.4}:${CONTAINER_TAG:-46ef61b070c49e495c3bc2eb7eca481ba40706ced1a097129b1601430148cd8a}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "8002:80"
            - "9102:9000"
            - "9002:9001"
        restart: unless-stopped
        secrets:
#            - mysql.pwd
#            - mysql_root.pwd
            - pma.pwd
            - supervisord.pwd
        volumes:
            - ./phpmyadmin/log:/var/log
#            - ./phpmyadmin/etc:/etc/phpmyadmin

#
#    registry:
#        container_name: registry
#        dns: 10.3.1.1
#        dns_search:
#            - ubuntu.home
#            - home
#        environment:
#            ENV_DOCKER_REGISTRY_HOST: s2.ubuntu.home
#            ENV_DOCKER_REGISTRY_PORT: 5000
#            ENV_DEFAULT_REPOSITORIES_PER_PAGE: 50
#            ENV_DEFAULT_TAGS_PER_PAGE: 20
#            ENV_MODE_BROWSE_ONLY: 'false'
#            TZ: "America/New_York"
#        hostname: registry.s3.home
#        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}thirdparty/docker-registry-frontend:${DREGISTRY_FE_VERSION:-v2}
#        labels:
#            com.github.url: "https://github.com/kwk/docker-registry-frontend"
#        logging:
#            driver: json-file
#            options:
#                max-file: "3"
#                max-size: "10m"
#        networks:
#            - support-net
#        ports:
#            - "8082:80"
#        restart: unless-stopped
#        volumes:
#            - ./registryfe/apache2.conf:/etc/apache/apache2.conf
#            - ./registryfe/log:/var/log/apache
#

    smee:
        container_name: smee
        depends_on:
            - jenkins
        dns: 10.3.1.1
        dns_search:
            - ubuntu.home
            - home
        environment:
#            SMEE_PORT: 8080
#            SMEE_PATH: /jenkins/github-webhook/
            SMEE_TARGET: http://jenkins:8080/jenkins/generic-webhook-trigger/invoke
            SMEE_URL: https://smee.io/F9gFiEeTza0Po4Rd
        hostname: smee.s3.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/smee:${CONTAINER_TAG:-9c157a4a975826907dcc772530f2ad74bbd12a6f4b0bba7e212a1f52abb07c1e}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        restart: unless-stopped               # only use when building a 'service container' 


    supervisorm:
        container_name: supervisorm
        dns: 10.3.1.1
        dns_search:
            - ubuntu.home
            - home
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SUPERVISORD_PASS_FILE: /run/secrets/supervisord.pwd
            SUPERVISORD_USER: ${CFG_USER:?}
        hostname: supervisorm.s3.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/cesi/${CESI_VERSION:-2.7.1}:${CONTAINER_TAG:-ffd106247f1186482806a46f5fafc59e22f83972a75a296e1bc972b0e0402144}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "8008:80"
            - "9008:9001"
        restart: unless-stopped
        secrets:
            - supervisord.pwd
        volumes:
            - ./supervisorm/log:/var/log


    webdav:
        container_name: webdav
        dns: 10.3.1.1
        dns_search:
            - ubuntu.home
            - home
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            WEBDAV_USER: ${CFG_USER:?}
            WEBDAV_PASS_FILE: /run/secrets/webdav.pwd
        hostname: webdav.s3.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/webdav:${CONTAINER_TAG:-eb68b8bffb57045edee03916d2d519e19965e689837db63e0e2e0eef3bdd97d3}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - support-net
        ports:
            - "8007:80"
        restart: unless-stopped
        secrets:
            - webdav.pwd
        volumes:
            - /mnt/nas:/webdav/nas:ro
            - ~:/webdav/home:ro
            - /:/webdav/root:ro
            - ../logs:/webdav/logs:ro
            - ./webdav/log:/var/log 


networks:
   support-net:
       ipam:
           config:
               - subnet: 172.31.1.0/24
       name: support-container-net

secrets:
   github.credentials:
     file: .secrets/secrets/credentials.github
   grafana_admin.pwd:
     file: .secrets/secrets/grafana_admin.pwd
   mysql.pwd:
     file: .secrets/secrets/bobb.pwd
   mysql_root.pwd:
     file: .secrets/secrets/bobb.pwd
   nagios.pwd:
     file: .secrets/secrets/bobb.pwd
   pma.pwd:
     file: .secrets/secrets/bobb.pwd
   photoprism.pwd:
     file: .secrets/secrets/bobb.pwd
   slack.token:
     file: .secrets/secrets/hubot_token.slack
   supervisord.pwd:      
     file: .secrets/secrets/bobb.pwd
   web_user.pwd:
     file: .secrets/secrets/bobb.pwd
   webdav.pwd:
     file: .secrets/secrets/bobb.pwd
   server.crt:
     file: .secrets/ssl/server.crt
   server.key:
     file: .secrets/ssl/server.key
   dhparam.pem:
     file: .secrets/ssl/dhparam.pem
