#!/bin/bash

#############################################################################
#
#   initialization for nagios
#
#############################################################################
declare -r config_dir=${CONFIG_DIR:?}
declare -r workspace_dir=${WORKSPACE_DIR:?}

declare -r top="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" 
source "${top}/../libs/docker.bashlib"
source "${top}/../libs/environ.bashlib"


declare NagiosConfig="${workspace_dir}/nagios/config/NagiosConfig.tgz"
if [ ! -f "$NagiosConfig" ]; then
    mkdir -p "${workspace_dir}/nagios/archives" ||:
    cp "${config_dir}/nagios/NagiosConfig.tgz" "$NagiosConfig" 
fi

declare dumps_dir="${workspace_dir}/mysql/loader/dumps"
if [ ! -e "${dumps_dir}/nconf.sql" ]; then
    mkdir -p "$dumps_dir" ||:
    cp "${config_dir}/nagios/nconf.sql" "${dumps_dir}/nconf.sql"
fi

# update extra hosts for nagios
declare yaml="${workspace_dir}/docker-compose.yml"
declare dc_json="$(docker.yamlToJson "$yaml")"

declare -r ip_match_rgx='localhost:((1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])'
declare expr="'s#${ip_match_rgx}#localhost:$(environ.ipAddress)#g'"
eval sed -i -r -e "$expr" "$yaml" 

declare secret jqquery
declare mysql_root_password=$(jq '.services.mysql.environment.MYSQL_ROOT_PASSWORD' <<< "$dc_json" | tr -d '"' )
if [ "$mysql_root_password" = 'null' ];then
    mysql_root_password=$(jq '.services.mysql.environment.MYSQL_ROOT_PASSWORD_FILE' <<< "$dc_json" | tr -d '"' )
    secret=$(basename "$mysql_root_password")
    jqquery=".secrets.\"${secret}\".file"
    mysql_root_password=$(< "$(jq "$jqquery" <<< "$dc_json" | tr -d '"' )")
fi

declare nconf_dbpass=$(jq '.services.nagios.environment.NCONF_DBPASS' <<< "$dc_json" | tr -d '"' )
if [ "$nconf_dbpass" = 'null' ];then
    nconf_dbpass=$(jq '.services.nagios.environment.NCONF_DBPASS_FILE' <<< "$dc_json" | tr -d '"' )
    secret=$(basename "$nconf_dbpass")
    jqquery=".secrets.\"${secret}\".file"
    nconf_dbpass=$(< "$(jq "$jqquery" <<< "$dc_json" | tr -d '"' )")
fi

declare nconf_dbuser=$(jq '.services.nagios.environment.NCONF_DBUSER' <<< "$dc_json" | tr -d '"' )
nconf_dbuser="$(eval echo "$nconf_dbuser")"

cat <<-NCONF_DBUSER > "${workspace_dir}/mysql/loader/nconf_user.sh"
#!/bin/bash

cat <<-EOSQL | mysql -uroot -p${mysql_root_password} -hlocalhost
    CREATE DATABASE IF NOT EXISTS nconf;
    CREATE USER IF NOT EXISTS '${nconf_dbuser}'@'%';
    SET PASSWORD FOR '${nconf_dbuser}'@'%' = PASSWORD('${nconf_dbpass}');
    GRANT ALL ON nconf.* TO '${nconf_dbuser}'@'%';
EOSQL

NCONF_DBUSER
