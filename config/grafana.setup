#!/bin/bash

#############################################################################
#
#   initialization for grafana
#
#############################################################################
declare -r config_dir=${CONFIG_DIR:?}
declare -r workspace_dir=${WORKSPACE_DIR:?}
declare -r grafana_uid=${GRAFANA_UID:?}

declare -r top="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" 
source "${top}/../libs/docker.bashlib"
source "${top}/../libs/environ.bashlib"


declare -r ini=${workspace_dir}/grafana/etc/grafana.ini
[ -f "$ini" ] && exit 0

if [ ! -e "$ini" ]; then

    # update extra hosts for nagios
    declare yaml="${workspace_dir}/docker-compose.yml"
    declare dc_json="$(docker.yamlToJson "$yaml")"

    declare secret jqquery
    declare grafana_root_password=$(jq '.services.grafana.environment.GF_SECURITY_ADMIN_PASSWORD' <<< "$dc_json" | tr -d '"' )
    if [ "$grafana_root_password" = 'null' ];then
        grafana_root_password=$(jq '.services.grafana.environment.GF_SECURITY_ADMIN_PASSWORD_FILE' <<< "$dc_json" | tr -d '"' )
        secret=$(basename "$grafana_root_password")
        jqquery=".secrets.\"${secret}\".file"
        grafana_root_password=$(< "$(jq "$jqquery" <<< "$dc_json" | tr -d '"' )")
    fi

    declare -r host_ip=$(environ.ipAddress) 
    declare -r host_name=$(environ.hostName) 

    sudo mkdir -p "${workspace_dir}/grafana"
    sudo cp -r "${config_dir}/grafana"/* "${workspace_dir}/grafana"/
    sudo sed -i -r -e "s|^instance_name\\s*=.*$|instance_name = ${host_name}|" \
                   -e "s|^domain\\s*=.*$|domain = ${host_ip}|" \
                   -e "s|^root_url\\s*=.*$|root_url = http://${host_ip}:3000/grafana|" \
                   -e "s|admin_user\\s*=.*$|admin_user = ${CFG_USER}|" \
                   -e "s|<HOST_IP>|${host_ip}|g" \
                   -e "s|^admin_password\\s*=.*$|admin_password = ${grafana_root_password}|" \
                "$ini"
    sudo chown -R "$grafana_uid" "${workspace_dir}/grafana"
fi
