#!/bin/bash

#############################################################################
#
#   initialization for postgresql
#
#############################################################################

declare -r config_dir="${CONFIG_DIR:?}/postgresql"
declare -r workspace_dir="${WORKSPACE_DIR:?}/postgresql"


declare isIinitialized="$(basename "${BASH_SOURCE[0]}")"
isIinitialized="${workspace_dir}/.${isIinitialized%.*}.init"
if [ ! -f "$isIinitialized" ]; then

    # perform initialization 
    mkdir -p "$workspace_dir" ||: 

    declare initdb="${workspace_dir}/postgres-initdb"
    if [ ! -e "${initdb}/.setup-CTD_data.sql" ]; then

        mkdir -p "${WORKSPACE_DIR}/bin" ||:
        while read -r f; do
            cp "$f" "${WORKSPACE_DIR}/bin"/
            chmod 755 "${WORKSPACE_DIR}/bin/$(basename "$f")"
        done < <(find "${config_dir}/bin" -type f ! -name '.*')

        mkdir -p "$initdb" ||:
        while read -r f; do
            [ "$f" = 'nginx.conf' ] && continue
            cp "$f" "$initdb"/
        done < <(find "${config_dir}" -maxdepth 1 -type f)

        chmod 755 "${initdb}"/*.sh
    fi

    touch "$isIinitialized"
fi

# perform common
if deploy.isValidService 'nginx' && [ -d "${config_dir}/nginx.conf" ]; then
    sudo mkdir -p "${WORKSPACE_DIR}/nginx/conf.d/"
    sudo cp -r "${config_dir}/nginx.conf"/* "${WORKSPACE_DIR}/nginx/conf.d/"
fi
